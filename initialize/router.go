/**
 * @Author: SolitudeAlma
 * @Date: 2022 2022/7/8 22:39
 */

package initialize

import (
	"github.com/gin-gonic/gin"
	"github.com/warlock-backend/middleware"
	"github.com/warlock-backend/router"
	"mime"
	"net/http"
)

// 初始化总路由

func Routers() *gin.Engine {
	Router := gin.Default()

	Router.LoadHTMLGlob("templates/**/*")
	// 注册静态文件:参数1：别名、参数2：当前static文件目录，
	_ = mime.AddExtensionType(".js", "application/javascript")
	Router.Static("/static", "./static")
	Router.GET("/", func(c *gin.Context) {
		c.HTML(http.StatusOK, "multiends/web.html", gin.H{
			"title": "Main website",
		})
	})
	systemRouter := router.RouterGroupApp.System
	// 如果想要不使用nginx代理前端网页，可以修改 web/.env.production 下的
	// VUE_APP_BASE_API = /
	// VUE_APP_BASE_PATH = http://localhost
	// 然后执行打包命令 npm run build。在打开下面4行注释
	// Router.LoadHTMLGlob("./dist/*.html") // npm打包成dist的路径
	// Router.Static("/favicon.ico", "./dist/favicon.ico")
	// Router.Static("/static", "./dist/assets")   // dist里面的静态资源
	// Router.StaticFile("/", "./dist/index.html") // 前端网页入口页面

	// Router.Use(middleware.LoadTls())  // 如果需要使用https 请打开此中间件 然后前往 core/server.go 将启动模式 更变为 Router.RunTLS("端口","你的cre/pem文件","你的key文件")
	// 跨域，如需跨域可以打开下面的注释
	Router.Use(middleware.Cors())        // 直接放行全部跨域请求
	Router.Use(middleware.CorsByRules()) // 按照配置的规则放行跨域请求
	//global.GVA_LOG.Info("use middleware cors")
	// 方便统一添加路由组前缀 多服务器上线使用

	PublicGroup := Router.Group("")
	{
		// 健康监测
		PublicGroup.GET("/health", func(c *gin.Context) {
			c.JSON(200, "ok")
		})
	}
	{
		systemRouter.InitBaseRouter(PublicGroup) // 注册基础功能路由 不做鉴权
		systemRouter.InitWSRouter(PublicGroup)   // ws相关路由
	}
	PrivateGroup := Router.Group("")
	PrivateGroup.Use(middleware.JWTAuth())
	{
		systemRouter.InitJwtRouter(PrivateGroup)  // jwt相关路由
		systemRouter.InitUserRouter(PrivateGroup) // 注册用户路由
		// Code generated by github.com/flipped-aurora/gin-vue-admin/server Begin; DO NOT EDIT.

		// Code generated by github.com/flipped-aurora/gin-vue-admin/server End; DO NOT EDIT.
	}

	return Router
}
